swagger: '2.0'
info:
  x-ibm-name: mock
  title: mock
  version: 1.0.0
schemes:
  - https
host: $(catalog.host)
basePath: /mock
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  clientIdHeader:
    type: apiKey
    in: header
    name: X-IBM-Client-Id
security:
  - clientIdHeader: []
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  assembly:
    execute:
      - gatewayscript:
          title: first
          version: 1.0.0
          source: "console.log(\"first1123123111\");\r\nconsole.log(\"first\");\r\nconsole.log(\"first\");\r\nconsole.log(\"first\");\r\nconsole.log(\"first\");\r\n"
      - xslt:
          title: xsltcheck
          input: false
          version: 1.0.0
          source: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<xsl:stylesheet version=\"1.0\"\r\n  xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\r\n  xmlns:dp=\"http://www.datapower.com/extensions\"\r\n  xmlns:func=\"http://exslt.org/functions\"\r\n  xmlns:apim=\"http://www.ibm.com/apimanagement\" extension-element-prefixes=\"dp func apim\">\r\n\r\n  <!-- Contains the APIM functions -->\r\n  <xsl:import href=\"local:///isp/policy/apim.custom.xsl\" />\r\n\r\n  <xsl:template match=\"/\">\r\n    <xsl:variable name=\"p\" select=\"apim:policyProperties()\" />\r\n    <xsl:message>\r\n      The value of my input property isssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss333333333333333333\r\n      <xsl:value-of select=\"$p/a_property\" />\r\n    </xsl:message>\r\n  </xsl:template>\r\n\r\n</xsl:stylesheet>"
      - if:
          title: iftrue
          condition: 'true'
          execute:
            - gatewayscript:
                title: sec
                version: 1.0.0
                source: "console.log(\"sec\");\r\nconsole.log(\"sec\");\r\n\r\nconsole.log(\"sec\");\r\nconsole.log(\"sec\");\r\nconsole.log(\"sec\");\r\nconsole.log(\"sec\");\r\n"
          version: 1.0.0
      - gatewayscript:
          title: third
          version: 1.0.0
          source: "console.log(\"third\");\r\nconsole.log(\"third\");\r\nconsole.log(\"third\");\r\nconsole.log(\"third\");\r\nconsole.log(\"third\");\r\nconsole.log(\"third\");"
      - operation-switch:
          title: operation-switch1
          case:
            - operations:
                - verb: get
                  path: /test
              execute:
                - gatewayscript:
                    title: four
                    version: 1.0.0
                    source: "console.log(\"four\");\r\nconsole.log(\"four\");\r\nconsole.log(\"four\");"
            - operations:
                - verb: get
                  path: /todo
              execute:
                - gatewayscript:
                    title: five
                    version: 1.0.0
                    source: "console.log(\"five\")\r\nconsole.log(\"five\")\r\nconsole.log(\"five\")\r\nconsole.log(\"five\")\r\nconsole.log(\"five\")\r\n\r\n"
          otherwise: []
          version: 1.0.0
      - xslt:
          title: six
          input: false
          version: 1.0.0
          source: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<xsl:stylesheet version=\"1.0\"\r\n  xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\r\n  xmlns:dp=\"http://www.datapower.com/extensions\"\r\n  xmlns:func=\"http://exslt.org/functions\"\r\n  xmlns:apim=\"http://www.ibm.com/apimanagement\" extension-element-prefixes=\"dp func apim\">\r\n\r\n  <!-- Contains the APIM functions -->\r\n  <xsl:import href=\"local:///isp/policy/apim.custom.xsl\" />\r\n\r\n  <xsl:template match=\"/\">\r\n    <xsl:variable name=\"p\" select=\"apim:policyProperties()\" />\r\n    <xsl:message>\r\n      The value of my input property sixxxxxxxxxxxxxxxxxxxx\r\n      <xsl:value-of select=\"$p/a_property\" />\r\n    </xsl:message>\r\n  </xsl:template>\r\n\r\n</xsl:stylesheet>"
      - switch:
          title: switchtest
          case:
            - condition: ((request.verb==='GET')&&(api.operation.path==='/test'))
              execute:
                - gatewayscript:
                    title: seven
                    version: 1.0.0
                    source: "console.log(\"seven\");\r\nconsole.log(\"seven\");"
                - gatewayscript:
                    title: seven2
                    version: 1.0.0
                    source: "console.log(\"seven2\");\r\nconsole.log(\"seven2\");"
            - otherwise:
                - gatewayscript:
                    title: eigth
                    version: 1.0.0
                    source: "console.log(\"eigth\");\r\nconsole.log(\"eigth\");"
          version: 1.0.0
      - gatewayscript:
          title: nine
          version: 1.0.0
          source: "session.output.write({ newJSon: \"token///chipopo \"});\r\napim.gfhgfhgfh11('application/json'); \r\npopo=4\r\npopi=1"
      - if:
          title: if22
          condition: 'true'
          execute:
            - gatewayscript:
                title: ten
                version: 1.0.0
                source: "const conditional = 51;\r\n"
          version: 1.0.0
    catch: []
  phase: realized
  categories:
    - 1wqqw
  gateway: datapower-gateway
paths:
  /test:
    get:
      responses:
        '200':
          description: 200 OK
  /todo:
    get:
      responses:
        '200':
          description: 200 OK
definitions: {}
tags: []
